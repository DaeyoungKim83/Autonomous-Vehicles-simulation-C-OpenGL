#include "Mundo.h"
#include "glut.h"
#include <math.h>



Mundo::Mundo()
{
	//deviationVectorCar1 = {};
	deviationVectorStraightCar1 = { 0, 0.77885, 1.594, 2.4208, 3.2589, 4.1081, 4.968, 5.8384, 6.719, 7.6095, 8.5098, 9.4194, 10.338, 11.266, 12.202, 13.147, 14.1, 15.061, 16.03, 17.006, 17.989, 18.98, 19.977, 20.981, 21.992, 23.008, 24.031, 25.06, 26.094, 27.133, 28.178, 29.228, 30.283, 31.342, 32.407, 33.475, 34.548, 35.625, 36.705, 37.79, 38.878, 39.969, 41.064, 42.162, 43.263, 44.367, 45.474, 46.583, 47.695, 48.809, 49.925, 51.044, 52.165, 53.287, 54.412, 55.538, 56.665, 57.794, 58.925, 60.056, 61.189, 62.323, 63.458, 64.594, 65.731, 66.868, 68.007, 69.145, 70.285, 71.424, 72.564, 73.705, 74.845, 75.986, 77.127, 78.268, 79.408, 80.549, 81.69, 82.83, 83.97, 85.11, 86.249, 87.388, 88.527, 89.665, 90.802, 91.939, 93.075, 94.211, 95.345, 96.479, 97.613, 98.745, 99.877, 101.01, 102.14, 103.27, 104.39, 105.52, 106.65, 107.77, 108.9, 110.02, 111.14, 112.26, 113.38, 114.5, 115.61, 116.73, 117.84, 118.96, 120.07, 121.18, 122.29, 123.4, 124.51, 125.61, 126.72, 127.82, 128.92, 130.02, 131.12, 132.22, 133.32, 134.41, 135.5, 136.6, 137.69, 138.78, 139.87, 140.95, 142.04, 143.12, 144.21, 145.29, 146.37, 147.45, 148.53, 149.6, 150.68, 151.75, 152.83, 153.9, 154.97, 156.04, 157.11, 158.17, 159.24, 160.3, 161.36, 162.43, 163.49, 164.55, 165.6, 166.66, 167.72, 168.77, 169.82, 170.88, 171.93, 172.98, 174.03, 175.07, 176.12, 177.17, 178.21, 179.25, 180.3, 181.34, 182.38, 183.42, 184.46, 185.49, 186.53, 187.57, 188.6, 189.63, 190.67, 191.7, 192.73, 193.76, 194.79, 195.82, 196.84, 197.87, 198.9, 199.92, 200.95, 201.97, 202.99, 204.01, 205.03, 206.06, 207.07, 208.09, 209.11, 210.13, 211.15, 212.16, 213.18, 214.19, 215.21, 216.22, 217.23, 218.25, 219.26, 220.27, 221.28, 222.29, 223.3, 224.31, 225.32, 226.33, 227.33, 228.34, 229.35, 230.36, 231.36, 232.37, 233.37, 234.38, 235.38, 236.38, 237.39, 238.39, 239.39, 240.39, 241.4, 242.4, 243.4, 244.4, 245.4, 246.4, 247.4, 248.4, 249.4, 250.4, 251.4, 252.4, 253.39, 254.39, 255.39, 256.39, 257.38, 258.38, 259.38, 260.38, 261.37, 262.37, 263.36, 264.36, 265.36, 266.35, 267.35, 268.34, 269.34, 270.33, 271.33, 272.32, 273.32, 274.31, 275.31, 276.3, 277.29, 278.29, 279.28, 280.28, 281.27, 282.26, 283.26, 284.25, 285.24, 286.24, 287.23, 288.22, 289.22, 290.21, 291.2, 292.2, 293.19, 294.18, 295.18, 296.17, 297.16, 298.16, 299.15, 300.14, 301.13, 302.13, 303.12, 304.11, 305.11, 306.1, 307.09, 308.09, 309.08, 310.07, 311.07, 312.06, 313.05, 314.04, 315.04, 316.03, 317.02, 318.02, 319.01, 320, 321, 321.99, 322.98, 323.98, 324.97, 325.97, 326.96, 327.95, 328.95, 329.94, 330.93, 331.93, 332.92, 333.92, 334.91, 335.9, 336.9, 337.89, 338.89, 339.88, 340.88, 341.87, 342.86, 343.86, 344.85, 345.85, 346.84, 347.84, 348.83, 349.83, 350.82, 351.82, 352.81, 353.81, 354.8, 355.8, 356.79, 357.79, 358.79, 359.78, 360.78, 361.77, 362.77, 363.76, 364.76, 365.76, 366.75, 367.75, 368.74, 369.74, 370.74, 371.73, 372.73, 373.73, 374.72, 375.72, 376.71, 377.71, 378.71, 379.71, 380.7, 381.7, 382.7, 383.69, 384.69, 385.69, 386.68, 387.68, 388.68, 389.68, 390.67, 391.67, 392.67, 393.67, 394.66, 395.66, 396.66, 397.66, 398.65, 399.65, 400.65, 401.65, 402.65, 403.64, 404.64, 405.64, 406.64, 407.64, 408.64, 409.63, 410.63, 411.63, 412.63, 413.63, 414.63, 415.62, 416.62, 417.62, 418.62, 419.62, 420.62, 421.62, 422.62, 423.61, 424.61, 425.61, 426.61, 427.61, 428.61, 429.61, 430.61, 431.61, 432.61, 433.61, 434.6, 435.6, 436.6, 437.6, 438.6, 439.6, 440.6, 441.6, 442.6, 443.6, 444.6, 445.6, 446.6, 447.6, 448.6, 449.6, 450.6, 451.6, 452.6, 453.6, 454.59, 455.59, 456.59, 457.59, 458.59, 459.59, 460.59, 461.59, 462.59, 463.59, 464.59, 465.59, 466.59, 467.59, 468.59, 469.59, 470.59, 471.59, 472.59, 473.59, 474.59, 475.59, 476.59, 477.59, 478.59, 479.59, 480.59, 481.59, 482.59, 483.59, 484.59, 485.59, 486.59, 487.59, 488.59, 489.59, 490.6, 491.6, 492.6, 493.6, 494.6, 495.6, 496.6, 497.6, 498.6, 499.6, 500.6, 501.6, 502.6, 503.6, 504.6, 505.6, 506.6, 507.6, 508.6, 509.6, 510.6, 511.6 };
	deviationVectorStraightCar2 = { 15.75, 16.994, 18.232, 19.464, 20.69, 21.91, 23.126, 24.335, 25.54, 26.74, 27.934, 29.124, 30.31, 31.49, 32.666, 33.838, 35.006, 36.169, 37.329, 38.484, 39.636, 40.784, 41.928, 43.069, 44.206, 45.34, 46.47, 47.597, 48.721, 49.843, 50.961, 52.076, 53.188, 54.298, 55.405, 56.509, 57.61, 58.71, 59.806, 60.901, 61.993, 63.082, 64.17, 65.255, 66.338, 67.419, 68.499, 69.576, 70.651, 71.725, 72.796, 73.866, 74.934, 76.001, 77.065, 78.129, 79.19, 80.25, 81.309, 82.366, 83.422, 84.476, 85.529, 86.581, 87.632, 88.681, 89.729, 90.776, 91.821, 92.866, 93.909, 94.952, 95.993, 97.033, 98.073, 99.111, 100.15, 101.18, 102.22, 103.26, 104.29, 105.32, 106.35, 107.39, 108.42, 109.45, 110.48, 111.5, 112.53, 113.56, 114.58, 115.61, 116.64, 117.66, 118.68, 119.71, 120.73, 121.75, 122.77, 123.79, 124.81, 125.83, 126.85, 127.87, 128.89, 129.91, 130.93, 131.95, 132.96, 133.98, 134.99, 136.01, 137.02, 138.04, 139.05, 140.07, 141.08, 142.1, 143.11, 144.12, 145.13, 146.15, 147.16, 148.17, 149.18, 150.19, 151.2, 152.21, 153.22, 154.23, 155.24, 156.25, 157.26, 158.27, 159.28, 160.29, 161.3, 162.3, 163.31, 164.32, 165.33, 166.33, 167.34, 168.35, 169.36, 170.36, 171.37, 172.38, 173.38, 174.39, 175.39, 176.4, 177.4, 178.41, 179.42, 180.42, 181.43, 182.43, 183.44, 184.44, 185.44, 186.45, 187.45, 188.46, 189.46, 190.47, 191.47, 192.47, 193.48, 194.48, 195.48, 196.49, 197.49, 198.49, 199.5, 200.5, 201.5, 202.51, 203.51, 204.51, 205.52, 206.52, 207.52, 208.52, 209.53, 210.53, 211.53, 212.53, 213.54, 214.54, 215.54, 216.54, 217.54, 218.55, 219.55, 220.55, 221.55, 222.55, 223.56, 224.56, 225.56, 226.56, 227.56, 228.56, 229.57, 230.57, 231.57, 232.57, 233.57, 234.57, 235.57, 236.57, 237.58, 238.58, 239.58, 240.58, 241.58, 242.58, 243.58, 244.58, 245.59, 246.59, 247.59, 248.59, 249.59, 250.59, 251.59, 252.59, 253.59, 254.59, 255.59, 256.59, 257.6, 258.6, 259.6, 260.6, 261.6, 262.6, 263.6, 264.6, 265.6, 266.6, 267.6, 268.6, 269.6, 270.6, 271.6, 272.6, 273.61, 274.61, 275.61, 276.61, 277.61, 278.61, 279.61, 280.61, 281.61, 282.61, 283.61, 284.61, 285.61, 286.61, 287.61, 288.61, 289.61, 290.61, 291.61, 292.61, 293.61, 294.61, 295.61, 296.61, 297.61, 298.61, 299.62, 300.62, 301.62, 302.62, 303.62, 304.62, 305.62, 306.62, 307.62, 308.62, 309.62, 310.62, 311.62, 312.62, 313.62, 314.62, 315.62, 316.62, 317.62, 318.62, 319.62, 320.62, 321.62, 322.62, 323.62, 324.62, 325.62, 326.62, 327.62, 328.62, 329.62, 330.62, 331.62, 332.62, 333.62, 334.62, 335.62, 336.62, 337.62, 338.62, 339.62, 340.62, 341.62, 342.62, 343.62, 344.62, 345.62, 346.62, 347.62, 348.62, 349.62, 350.62, 351.62, 352.62, 353.62, 354.62, 355.62, 356.62, 357.62, 358.62, 359.62, 360.62, 361.62, 362.62, 363.62, 364.62, 365.62, 366.62, 367.62, 368.62, 369.62, 370.62, 371.62, 372.62, 373.62, 374.62, 375.62, 376.62, 377.62, 378.62, 379.62, 380.62, 381.62, 382.62, 383.62, 384.62, 385.62, 386.62, 387.62, 388.62, 389.62, 390.62, 391.62, 392.62, 393.62, 394.62, 395.62, 396.62, 397.62, 398.62, 399.62, 400.62, 401.62, 402.62, 403.62, 404.62, 405.62, 406.62, 407.62, 408.62, 409.62, 410.62, 411.62, 412.62, 413.62, 414.62, 415.62, 416.62, 417.62, 418.62, 419.62, 420.63, 421.63, 422.63, 423.63, 424.63, 425.63, 426.63, 427.63, 428.63, 429.63, 430.63, 431.63, 432.63, 433.63, 434.63, 435.63, 436.63, 437.63, 438.63, 439.63, 440.63, 441.63, 442.63, 443.63, 444.63, 445.63, 446.63, 447.63, 448.63, 449.63, 450.63, 451.63, 452.63, 453.63, 454.63, 455.63, 456.63, 457.63, 458.63, 459.63, 460.63, 461.63, 462.63, 463.63, 464.63, 465.63, 466.63, 467.63, 468.63, 469.63, 470.63, 471.63, 472.63, 473.63, 474.63, 475.63, 476.63, 477.63, 478.63, 479.63, 480.63, 481.63, 482.63, 483.63, 484.63, 485.63, 486.63, 487.63, 488.63, 489.63, 490.63, 491.63, 492.63, 493.63, 494.63, 495.63, 496.63, 497.63, 498.63, 499.63, 500.63, 501.63, 502.63, 503.63, 504.63, 505.63, 506.63, 507.63, 508.63, 509.63, 510.63, 511.63, 512.63, 513.63, 514.63, 515.63, 516.63, 517.63, 518.63, 519.63, 520.63, 521.63, 522.63, 523.63, 524.63 };
	deviationVectorCurvedCar1 = { 0, -0.0000084549, -0.0000084549, -0.000079992, -0.00027955, -0.00066, -0.0012609, -0.0021098, -0.0032239, -0.0046113, -0.0062726, -0.0082024, -0.010391, -0.012826, -0.015492, -0.018375, -0.021461, -0.024735, -0.028185, -0.031798, -0.035565, -0.039475, -0.043521, -0.047695, -0.051988, -0.056395, -0.06091, -0.065525, -0.070236, -0.075036, -0.079919, -0.084881, -0.089915, -0.095017, -0.10018, -0.10541, -0.11068, -0.11601, -0.12138, -0.12679, -0.13224, -0.13772, -0.14324, -0.14878, -0.15435, -0.15994, -0.16556, -0.17119, -0.17684, -0.18251, -0.18819, -0.19388, -0.19959, -0.20531, -0.21104, -0.21677, -0.22252, -0.22827, -0.23403, -0.2398, -0.24557, -0.25135, -0.25713, -0.26292, -0.26871, -0.27451, -0.28032, -0.28613, -0.29194, -0.29776, -0.30359, -0.30942, -0.31526, -0.3211, -0.32695, -0.3328, -0.33866, -0.34453, -0.3504, -0.35628, -0.36216, -0.36805, -0.37394, -0.37978, -0.38549, -0.39103, -0.39636, -0.40144, -0.40627, -0.41084, -0.41513, -0.41917, -0.42296, -0.4265, -0.42983, -0.43294, -0.43586, -0.4386, -0.44118, -0.4436, -0.44587, -0.448, -0.45001, -0.4519, -0.45368, -0.45535, -0.45693, -0.4584, -0.4598, -0.46111, -0.46234, -0.4635, -0.4646, -0.46564, -0.46662, -0.46755, -0.46843, -0.46928, -0.47008, -0.47085, -0.47159, -0.4723, -0.47298, -0.47364, -0.47429, -0.47491, -0.47552, -0.47611, -0.4767, -0.47727, -0.47783, -0.47839, -0.47894, -0.47948, -0.48002, -0.48055, -0.48108, -0.48161, -0.48213, -0.48265, -0.48317, -0.48369, -0.4842, -0.48472, -0.48523, -0.48574, -0.48625, -0.48676, -0.48727, -0.48778, -0.48828, -0.48878, -0.48928, -0.48978, -0.49027, -0.49076, -0.49125, -0.49173, -0.49221, -0.49269, -0.49316, -0.49363, -0.4941, -0.49456, -0.49501, -0.49546, -0.49591, -0.49635, -0.49678, -0.49721, -0.49763, -0.49805, -0.49846, -0.49887, -0.49927, -0.49966, -0.50005, -0.50043, -0.5008, -0.50117, -0.50153, -0.50189, -0.50223, -0.50258, -0.50291, -0.50324, -0.50357, -0.50388, -0.50419, -0.5045, -0.5048, -0.50509, -0.50538, -0.50566, -0.50593, -0.5062, -0.50647, -0.50672, -0.50698, -0.50722, -0.50747, -0.5077, -0.50793, -0.50816, -0.50838, -0.5086, -0.50881, -0.50902, -0.50922, -0.50942, -0.50961, -0.5098, -0.50999, -0.51017, -0.51035, -0.51052, -0.51069, -0.51086, -0.51102, -0.51118, -0.51134, -0.51149, -0.51164, -0.51179, -0.51193, -0.51207, -0.51221, -0.51235, -0.51248, -0.51261, -0.51273, -0.51286, -0.51298, -0.5131, -0.51321, -0.51333, -0.51344, -0.51355, -0.51365, -0.51376, -0.51386, -0.51396, -0.51406, -0.51416, -0.51425, -0.51435, -0.51444, -0.51453, -0.51462, -0.5147, -0.51479, -0.51487, -0.51495, -0.51503, -0.51511, -0.51519, -0.51526, -0.51533, -0.51541, -0.51548, -0.51555, -0.51561, -0.51568, -0.51575, -0.51581, -0.51587, -0.51594, -0.516, -0.51606, -0.51611, -0.51617, -0.51623, -0.51628, -0.51634, -0.51639, -0.51644, -0.51649, -0.51654, -0.51659, -0.51664, -0.51669, -0.51673, -0.51678, -0.51682, -0.51687, -0.51691, -0.51695, -0.51699, -0.51703, -0.51707, -0.51711, -0.51715, -0.51719, -0.51722, -0.51726, -0.51729, -0.51733, -0.51736, -0.5174, -0.51743, -0.51746 };
	deviationVectorCurvedCar2 = { 0, 0.053303, 0.10059, 0.14195, 0.17757, 0.20771, 0.23271, 0.25295, 0.26889, 0.28099, 0.28974, 0.29564, 0.29915, 0.3007, 0.3007, 0.2995, 0.29739, 0.29464, 0.29146, 0.28801, 0.28442, 0.2808, 0.27723, 0.27374, 0.27039, 0.26718, 0.26415, 0.26129, 0.25862, 0.25612, 0.2538, 0.25166, 0.24969, 0.24789, 0.24625, 0.24476, 0.24342, 0.24223, 0.24117, 0.24023, 0.23941, 0.2387, 0.23809, 0.23757, 0.23713, 0.23677, 0.23646, 0.23622, 0.23602, 0.23587, 0.23575, 0.23567, 0.23561, 0.23557, 0.23555, 0.23554, 0.23555, 0.23557, 0.23559, 0.23562, 0.23565, 0.23569, 0.23572, 0.23576, 0.2358, 0.23583, 0.23587, 0.23591, 0.23594, 0.23597, 0.236, 0.23603, 0.23605, 0.23607, 0.23609, 0.23611, 0.23613, 0.23615, 0.23616, 0.23617, 0.23618, 0.23619, 0.2362, 0.23621, 0.23621, 0.23622, 0.23622, 0.23622, 0.23623, 0.23623, 0.23623, 0.23623, 0.23623, 0.23623, 0.23623, 0.23623, 0.23623, 0.23623, 0.23623, 0.23623, 0.23623, 0.23623, 0.23623, 0.23623, 0.23623, 0.23623, 0.23623, 0.23623, 0.23623, 0.23623, 0.23623, 0.23623, 0.23623, 0.23623, 0.23623, 0.23623, 0.23623, 0.23623, 0.23623, 0.23623, 0.23623, 0.23623, 0.23623, 0.23623, 0.23623, 0.23623, 0.23623, 0.23623, 0.23623, 0.23623, 0.23623, 0.23623, 0.23623, 0.23623, 0.23623, 0.23623, 0.23623, 0.23623, 0.23623, 0.23623, 0.23623, 0.23623, 0.23623, 0.23623, 0.23623, 0.23623, 0.23623, 0.23623, 0.23623, 0.23623, 0.23623, 0.23623, 0.23623, 0.23623, 0.23623, 0.23623, 0.23623, 0.23623, 0.23623, 0.23623, 0.23623, 0.23623, 0.23623, 0.23623, 0.23623, 0.23623, 0.23623, 0.23623, 0.23623, 0.23623, 0.23623, 0.23623, 0.23623, 0.23623, 0.23623, 0.23623, 0.23623, 0.23623, 0.23623, 0.23623, 0.23623, 0.23623, 0.23623, 0.23623, 0.23623, 0.23623, 0.23623, 0.23623, 0.23623, 0.23623, 0.23623, 0.23623, 0.23623, 0.23623, 0.23623, 0.23623, 0.23623, 0.23623, 0.23623, 0.23623, 0.23623, 0.23623, 0.23623, 0.23623, 0.23623, 0.23623, 0.23623, 0.23623, 0.23623, 0.23623, 0.23623, 0.23623, 0.23623, 0.23623, 0.23623, 0.23623, 0.23623, 0.23623, 0.23623, 0.23623, 0.23623, 0.23623, 0.23623, 0.23623, 0.23623, 0.23623, 0.23623, 0.23623, 0.23623, 0.23623, 0.23623, 0.23623, 0.23623, 0.23623, 0.23623, 0.23623, 0.23623, 0.23623, 0.23623, 0.23623, 0.23623, 0.23623, 0.23623, 0.23623, 0.23623, 0.23623, 0.23623, 0.23623, 0.23623, 0.23623, 0.23623, 0.23623, 0.23623, 0.23623, 0.23623, 0.23623, 0.23623, 0.23623, 0.23623, 0.23623, 0.23623, 0.23623, 0.23623, 0.23623, 0.23623, 0.23623, 0.23623, 0.23623, 0.23623, 0.23623, 0.23623, 0.23623, 0.23623, 0.23623, 0.23623, 0.23623, 0.23623, 0.23623, 0.23623, 0.23623, 0.23623, 0.23623, 0.23623, 0.23623, 0.23623, 0.23623, 0.23623, 0.23623, 0.23623, 0.23623, 0.23623, 0.23623, 0.23623, 0.23623, 0.23623, 0.23623, 0.23623, 0.23623, 0.23623, 0.23623, 0.23623, 0.23623, 0.23623, 0.23623, 0.23623, 0.23623, 0.23623, 0.23623, 0.23623, 0.23623, 0.23623, 0.23623, 0.23623, 0.23623, 0.23623, 0.23623, 0.23623, 0.23623, 0.23623, 0.23623, 0.23623, 0.23623, 0.23623, 0.23623, 0.23623, 0.23623, 0.23623, 0.23623, 0.23623, 0.23623, 0.23623, 0.23623, 0.23623, 0.23623, 0.23623, 0.23623, 0.23623, 0.23623, 0.23623, 0.23623, 0.23623, 0.23623, 0.23623, 0.23623, 0.23623, 0.23623, 0.23623, 0.23623, 0.23623, 0.23623, 0.23623, 0.23623, 0.23623, 0.23623, 0.23623, 0.23623, 0.23623, 0.23623, 0.23623, 0.23623, 0.23623, 0.23623, 0.23623, 0.23623, 0.23623, 0.23623, 0.23623, 0.23623, 0.23623, 0.23623, 0.23623, 0.23623, 0.23623, 0.23623, 0.23623, 0.23623, 0.23623, 0.23623, 0.23623, 0.23623, 0.23623, 0.23623, 0.23623, 0.23623, 0.23623, 0.23623, 0.23623, 0.23623, 0.23623, 0.23623, 0.23623, 0.23623, 0.23623, 0.23623, 0.23623, 0.23623, 0.23623, 0.23623, 0.23623, 0.23623, };
	car1 = new Car(deviationVectorStraightCar1, deviationVectorCurvedCar1, 255, 50, 20, 0, 10.0f);
	car2 = new Car(deviationVectorStraightCar2, deviationVectorCurvedCar2, 48, 70, 132, 0, 10.0f);
}

Mundo::~Mundo()
{
	delete car1;
	delete car2;
}


void Mundo::RotarOjo()
{
	float dist=sqrt(x_ojo*x_ojo+z_ojo*z_ojo);
	float ang=atan2(z_ojo,x_ojo);
	ang+=0.05f;
	x_ojo=dist*cos(ang);
	z_ojo=dist*sin(ang);
}
void Mundo::Dibuja()
{
	gluLookAt(x_ojo, y_ojo, z_ojo,  // posicion del ojo
		x_vista, y_vista, z_vista,      // hacia que punto mira  (0,0,0) 
			0.0, 0.0, 1.0);      // definimos hacia arriba (eje Y)    

	//aqui es donde hay que poner el codigo de dibujo
	//dibujo del suelo
	glDisable(GL_LIGHTING);
	glEnable(GL_LIGHTING);


	car1->Dibuja();
	car2->Dibuja();
	myStraightRoad.Dibuja();
	myCurvedRoad.Dibuja();
	myListOfDots.Dibuja();
	myListOfDots_2.Dibuja();
	myGrass.Dibuja(); 
	//myTemporalStraightRoad.Dibuja();
}

void Mundo::SetPos_ojo(Mundo* mundo)
{
	mundo->x_ojo = car1->getRealPosition().x ;
	mundo->y_ojo = car1->getRealPosition().y - 25;

	mundo->x_vista = car1->getRealPosition().x ;
	mundo->y_vista = car1->getRealPosition().y + 30;
}

void Mundo::Mueve()
{
	if (waitingTime++ > 20) //Here we set the waiting time desired in terms of times the sample time. In this case, 50.
	{
		car1->Movement(0.001, 0.002, 0.003, 0.004); //red
		//myListOfDots.addDot(car1);

		car2->Movement(0.001, 0.002, 0.003, 0.004); //0.004
		//myListOfDots_2.addDot(car2);
	}
}

void Mundo::Inicializa()
{
	x_ojo = 0.0f;
	y_ojo = -30.0f;//-10;//-5
	z_ojo = 70.0f;//60

	x_vista = 0.0f;//7.5f;
	y_vista = 30.0f;//10.0f;
	z_vista = -20.0f;
}

void Mundo::Tecla(unsigned char key)
{
}